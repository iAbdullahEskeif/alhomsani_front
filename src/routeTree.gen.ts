/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as PaymentConfirmationIndexImport } from './routes/payment-confirmation/index'
import { Route as ContactIndexImport } from './routes/contact/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as ProfileUsernameImport } from './routes/profile/$username'
import { Route as CarsLuxuryCarsImport } from './routes/cars/luxuryCars'
import { Route as CarsFutureclassicCarsImport } from './routes/cars/futureclassicCars'
import { Route as CarsElectricalCarsImport } from './routes/cars/electricalCars'
import { Route as CarsConceptCarsImport } from './routes/cars/conceptCars'
import { Route as CarsClassicCarsImport } from './routes/cars/classicCars'
import { Route as CarsIdImport } from './routes/cars/$id'
import { Route as ProfileStalkIndexImport } from './routes/profile/stalk/index'
import { Route as ProfileStalkIdImport } from './routes/profile/stalk/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const PaymentConfirmationIndexRoute = PaymentConfirmationIndexImport.update({
  id: '/payment-confirmation/',
  path: '/payment-confirmation/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIndexRoute = ContactIndexImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUsernameRoute = ProfileUsernameImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => rootRoute,
} as any)

const CarsLuxuryCarsRoute = CarsLuxuryCarsImport.update({
  id: '/cars/luxuryCars',
  path: '/cars/luxuryCars',
  getParentRoute: () => rootRoute,
} as any)

const CarsFutureclassicCarsRoute = CarsFutureclassicCarsImport.update({
  id: '/cars/futureclassicCars',
  path: '/cars/futureclassicCars',
  getParentRoute: () => rootRoute,
} as any)

const CarsElectricalCarsRoute = CarsElectricalCarsImport.update({
  id: '/cars/electricalCars',
  path: '/cars/electricalCars',
  getParentRoute: () => rootRoute,
} as any)

const CarsConceptCarsRoute = CarsConceptCarsImport.update({
  id: '/cars/conceptCars',
  path: '/cars/conceptCars',
  getParentRoute: () => rootRoute,
} as any)

const CarsClassicCarsRoute = CarsClassicCarsImport.update({
  id: '/cars/classicCars',
  path: '/cars/classicCars',
  getParentRoute: () => rootRoute,
} as any)

const CarsIdRoute = CarsIdImport.update({
  id: '/cars/$id',
  path: '/cars/$id',
  getParentRoute: () => rootRoute,
} as any)

const ProfileStalkIndexRoute = ProfileStalkIndexImport.update({
  id: '/profile/stalk/',
  path: '/profile/stalk/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileStalkIdRoute = ProfileStalkIdImport.update({
  id: '/profile/stalk/$id',
  path: '/profile/stalk/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cars/$id': {
      id: '/cars/$id'
      path: '/cars/$id'
      fullPath: '/cars/$id'
      preLoaderRoute: typeof CarsIdImport
      parentRoute: typeof rootRoute
    }
    '/cars/classicCars': {
      id: '/cars/classicCars'
      path: '/cars/classicCars'
      fullPath: '/cars/classicCars'
      preLoaderRoute: typeof CarsClassicCarsImport
      parentRoute: typeof rootRoute
    }
    '/cars/conceptCars': {
      id: '/cars/conceptCars'
      path: '/cars/conceptCars'
      fullPath: '/cars/conceptCars'
      preLoaderRoute: typeof CarsConceptCarsImport
      parentRoute: typeof rootRoute
    }
    '/cars/electricalCars': {
      id: '/cars/electricalCars'
      path: '/cars/electricalCars'
      fullPath: '/cars/electricalCars'
      preLoaderRoute: typeof CarsElectricalCarsImport
      parentRoute: typeof rootRoute
    }
    '/cars/futureclassicCars': {
      id: '/cars/futureclassicCars'
      path: '/cars/futureclassicCars'
      fullPath: '/cars/futureclassicCars'
      preLoaderRoute: typeof CarsFutureclassicCarsImport
      parentRoute: typeof rootRoute
    }
    '/cars/luxuryCars': {
      id: '/cars/luxuryCars'
      path: '/cars/luxuryCars'
      fullPath: '/cars/luxuryCars'
      preLoaderRoute: typeof CarsLuxuryCarsImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username': {
      id: '/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexImport
      parentRoute: typeof rootRoute
    }
    '/payment-confirmation/': {
      id: '/payment-confirmation/'
      path: '/payment-confirmation'
      fullPath: '/payment-confirmation'
      preLoaderRoute: typeof PaymentConfirmationIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/stalk/$id': {
      id: '/profile/stalk/$id'
      path: '/profile/stalk/$id'
      fullPath: '/profile/stalk/$id'
      preLoaderRoute: typeof ProfileStalkIdImport
      parentRoute: typeof rootRoute
    }
    '/profile/stalk/': {
      id: '/profile/stalk/'
      path: '/profile/stalk'
      fullPath: '/profile/stalk'
      preLoaderRoute: typeof ProfileStalkIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cars/$id': typeof CarsIdRoute
  '/cars/classicCars': typeof CarsClassicCarsRoute
  '/cars/conceptCars': typeof CarsConceptCarsRoute
  '/cars/electricalCars': typeof CarsElectricalCarsRoute
  '/cars/futureclassicCars': typeof CarsFutureclassicCarsRoute
  '/cars/luxuryCars': typeof CarsLuxuryCarsRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/about': typeof AboutIndexRoute
  '/contact': typeof ContactIndexRoute
  '/payment-confirmation': typeof PaymentConfirmationIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/profile/stalk/$id': typeof ProfileStalkIdRoute
  '/profile/stalk': typeof ProfileStalkIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cars/$id': typeof CarsIdRoute
  '/cars/classicCars': typeof CarsClassicCarsRoute
  '/cars/conceptCars': typeof CarsConceptCarsRoute
  '/cars/electricalCars': typeof CarsElectricalCarsRoute
  '/cars/futureclassicCars': typeof CarsFutureclassicCarsRoute
  '/cars/luxuryCars': typeof CarsLuxuryCarsRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/about': typeof AboutIndexRoute
  '/contact': typeof ContactIndexRoute
  '/payment-confirmation': typeof PaymentConfirmationIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/profile/stalk/$id': typeof ProfileStalkIdRoute
  '/profile/stalk': typeof ProfileStalkIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cars/$id': typeof CarsIdRoute
  '/cars/classicCars': typeof CarsClassicCarsRoute
  '/cars/conceptCars': typeof CarsConceptCarsRoute
  '/cars/electricalCars': typeof CarsElectricalCarsRoute
  '/cars/futureclassicCars': typeof CarsFutureclassicCarsRoute
  '/cars/luxuryCars': typeof CarsLuxuryCarsRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/about/': typeof AboutIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/payment-confirmation/': typeof PaymentConfirmationIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/profile/stalk/$id': typeof ProfileStalkIdRoute
  '/profile/stalk/': typeof ProfileStalkIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cars/$id'
    | '/cars/classicCars'
    | '/cars/conceptCars'
    | '/cars/electricalCars'
    | '/cars/futureclassicCars'
    | '/cars/luxuryCars'
    | '/profile/$username'
    | '/about'
    | '/contact'
    | '/payment-confirmation'
    | '/profile'
    | '/profile/stalk/$id'
    | '/profile/stalk'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cars/$id'
    | '/cars/classicCars'
    | '/cars/conceptCars'
    | '/cars/electricalCars'
    | '/cars/futureclassicCars'
    | '/cars/luxuryCars'
    | '/profile/$username'
    | '/about'
    | '/contact'
    | '/payment-confirmation'
    | '/profile'
    | '/profile/stalk/$id'
    | '/profile/stalk'
  id:
    | '__root__'
    | '/'
    | '/cars/$id'
    | '/cars/classicCars'
    | '/cars/conceptCars'
    | '/cars/electricalCars'
    | '/cars/futureclassicCars'
    | '/cars/luxuryCars'
    | '/profile/$username'
    | '/about/'
    | '/contact/'
    | '/payment-confirmation/'
    | '/profile/'
    | '/profile/stalk/$id'
    | '/profile/stalk/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CarsIdRoute: typeof CarsIdRoute
  CarsClassicCarsRoute: typeof CarsClassicCarsRoute
  CarsConceptCarsRoute: typeof CarsConceptCarsRoute
  CarsElectricalCarsRoute: typeof CarsElectricalCarsRoute
  CarsFutureclassicCarsRoute: typeof CarsFutureclassicCarsRoute
  CarsLuxuryCarsRoute: typeof CarsLuxuryCarsRoute
  ProfileUsernameRoute: typeof ProfileUsernameRoute
  AboutIndexRoute: typeof AboutIndexRoute
  ContactIndexRoute: typeof ContactIndexRoute
  PaymentConfirmationIndexRoute: typeof PaymentConfirmationIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  ProfileStalkIdRoute: typeof ProfileStalkIdRoute
  ProfileStalkIndexRoute: typeof ProfileStalkIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CarsIdRoute: CarsIdRoute,
  CarsClassicCarsRoute: CarsClassicCarsRoute,
  CarsConceptCarsRoute: CarsConceptCarsRoute,
  CarsElectricalCarsRoute: CarsElectricalCarsRoute,
  CarsFutureclassicCarsRoute: CarsFutureclassicCarsRoute,
  CarsLuxuryCarsRoute: CarsLuxuryCarsRoute,
  ProfileUsernameRoute: ProfileUsernameRoute,
  AboutIndexRoute: AboutIndexRoute,
  ContactIndexRoute: ContactIndexRoute,
  PaymentConfirmationIndexRoute: PaymentConfirmationIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  ProfileStalkIdRoute: ProfileStalkIdRoute,
  ProfileStalkIndexRoute: ProfileStalkIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cars/$id",
        "/cars/classicCars",
        "/cars/conceptCars",
        "/cars/electricalCars",
        "/cars/futureclassicCars",
        "/cars/luxuryCars",
        "/profile/$username",
        "/about/",
        "/contact/",
        "/payment-confirmation/",
        "/profile/",
        "/profile/stalk/$id",
        "/profile/stalk/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cars/$id": {
      "filePath": "cars/$id.tsx"
    },
    "/cars/classicCars": {
      "filePath": "cars/classicCars.tsx"
    },
    "/cars/conceptCars": {
      "filePath": "cars/conceptCars.tsx"
    },
    "/cars/electricalCars": {
      "filePath": "cars/electricalCars.tsx"
    },
    "/cars/futureclassicCars": {
      "filePath": "cars/futureclassicCars.tsx"
    },
    "/cars/luxuryCars": {
      "filePath": "cars/luxuryCars.tsx"
    },
    "/profile/$username": {
      "filePath": "profile/$username.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/contact/": {
      "filePath": "contact/index.tsx"
    },
    "/payment-confirmation/": {
      "filePath": "payment-confirmation/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/profile/stalk/$id": {
      "filePath": "profile/stalk/$id.tsx"
    },
    "/profile/stalk/": {
      "filePath": "profile/stalk/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
